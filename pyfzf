#!/bin/bash
# menus
ins="Install package(s) from official repo"
upg="Upgrade system"
rmr="Remove recently installed package(s)"
rmro="Remove recently installed off package(s)"
rmra="Remove recently installed aur package(s)"
rms="Remove installed package(s)"
rmso="Remove installed off package(s)"
rmsa="Remove installed aur package(s)"
pdif="Resolve pacnew and pacsave files (pacdiff)"
clr="Clear uninstalled packages from cache (paccache)"
rmud="Remove unneeded dependencies (orphans)"
nws="Show news from Archlinux homepage"
sh="Start shell"

# fzf commands for "to be installed" and "to be removed" packages respectively
fzfi() {
    fzf --layout=reverse --multi --preview='pacman --color always -Si {1}' --preview-window=right:60%:wrap
}
fzfr() {
    fzf --layout=reverse --multi --preview='pacman --color always -Qi {1}' --preview-window=right:60%:wrap
}

# grep extended regexp of packages to ignore when listing explicitly installed packages to remove
pacstoign="(^base$)|(^efibootmgr$)|(^grub$)|(^linux$)|(^linux-firmware$)|(^linux-lts$)"

# menus to show
arg="$ins\n$upg\n$rmr\n$rmro\n$rmra\n$rms\n$rmso\n$rmsa\n$pdif\n$clr\n$rmud\n$nws\n$sh"

while true ; do
    clear
    sel=$(echo -e "$arg" | fzf --layout=reverse)
    case "$sel" in
        "$ins")
            mapfile -t pacstoins < <(pacman -Slq | fzfi)
            if (( ${#pacstoins[@]} )) ; then
                clear
                trap : INT
                yay -S "${pacstoins[@]}"
                trap - INT
                echo -en "\n Press any key to continue or ^C to exit..." && read -n 1 -s
            fi
            ;;
        "$upg")
            trap : INT
            yay -Syu
            trap - INT
            echo -en "\n Press any key to continue or ^C to exit..." && read -n 1 -s
            ;;
        "$rmr")
            mapfile -t pacstorem < <(
                tac /var/log/pacman.log | grep -aF "[ALPM] installed" |
                 awk '{if (!x[$4]) {x[$4]=1; print $4}}' |
                  grep -Fxf <(pacman -Qqe | grep -Fxvf <(pacman -Qqg base-devel) |
                   grep -Ev "$pacstoign") | fzfr)
            if (( ${#pacstorem[@]} )) ; then
                clear
                trap : INT
                yay -Rns "${pacstorem[@]}"
                trap - INT
                echo -en "\n Press any key to continue or ^C to exit..." && read -n 1 -s
            fi
            ;;
        "$rmro")
            mapfile -t pacstorem < <(
                tac /var/log/pacman.log | grep -aF "[ALPM] installed" |
                 awk '{if (!x[$4]) {x[$4]=1; print $4}}' |
                  grep -Fxf <(pacman -Qqen | grep -Fxvf <(pacman -Qqg base-devel) |
                   grep -Ev "$pacstoign") | fzfr)
            if (( ${#pacstorem[@]} )) ; then
                clear
                trap : INT
                yay -Rns "${pacstorem[@]}"
                trap - INT
                echo -en "\n Press any key to continue or ^C to exit..." && read -n 1 -s
            fi
            ;;
        "$rmra")
            mapfile -t pacstorem < <(
                tac /var/log/pacman.log | grep -aF "[ALPM] installed" |
                 awk '{if (!x[$4]) {x[$4]=1; print $4}}' |
                  grep -Fxf <(pacman -Qqem) | fzfr)
            if (( ${#pacstorem[@]} )) ; then
                clear
                trap : INT
                yay -Rns "${pacstorem[@]}"
                trap - INT
                echo -en "\n Press any key to continue or ^C to exit..." && read -n 1 -s
            fi
            ;;
        "$rms")
            mapfile -t pacstorem < <(
                pacman -Qqe | grep -Fxvf <(pacman -Qqg base-devel) |
                 grep -Ev "$pacstoign" | fzfr)
            if (( ${#pacstorem[@]} )) ; then
                clear
                trap : INT
                yay -Rns "${pacstorem[@]}"
                trap - INT
                echo -en "\n Press any key to continue or ^C to exit..." && read -n 1 -s
            fi
            ;;
        "$rmso")
            mapfile -t pacstorem < <(
                pacman -Qqen | grep -Fxvf <(pacman -Qqg base-devel) |
                 grep -Ev "pacstoign" | fzfr)
            if (( ${#pacstorem[@]} )) ; then
                clear
                trap : INT
                yay -Rns "${pacstorem[@]}"
                trap - INT
                echo -en "\n Press any key to continue or ^C to exit..." && read -n 1 -s
            fi
            ;;
        "$rmsa")
            mapfile -t pacstorem < <(pacman -Qqem | fzfr)
            if (( ${#pacstorem[@]} )) ; then
                clear
                trap : INT
                yay -Rns "${pacstorem[@]}"
                trap - INT
                echo -en "\n Press any key to continue or ^C to exit..." && read -n 1 -s
            fi
            ;;
        "$pdif")
            trap : INT
            sudo pacdiff
            trap - INT
            ;;
        "$clr")
            trap : INT
            paccache --remove --uninstalled --keep 0
            trap - INT
            echo -en "\n Press any key to continue or ^C to exit..." && read -n 1 -s
            ;;
        "$rmud")
            mapfile -t orpstorem < <(pacman -Qdtq)
            if (( ${#orpstorem[@]} )) ; then
                trap : INT
                yay -Rns "${orpstorem[@]}"
                trap - INT
            else
                echo -e "\e[1;32m==> \e[1;37mNo unneeded dependencies (orphans) found for removing\e[0m"
            fi
            echo -en "\n Press any key to continue or ^C to exit..." && read -n 1 -s
            ;;
        "$nws")
            yay -Pw | less -R
            ;;
        "$sh")
            ${SHELL:-bash}
            ;;
        *)
            break
            ;;
    esac
done
clear
